#!/bin/bash -x

set -e
exec 1>/tmp/post-deploy.log
exec 2>/tmp/post-deploy.log

APP="$1"; PORT="$2"
TMP_ARCHIVE="/tmp/post-deploy.archive.tmp"
if [ -f $TMP_ARCHIVE ]; then rm $TMP_ARCHIVE; fi

cd "$HOME/$APP"
LAST_COMMIT=$(git log --pretty=oneline -n1| sed -e 's/\s.\+$//g')

if [ `git archive $LAST_COMMIT | tee $TMP_ARCHIVE | tar -t | grep 'V-APP$' |wc -l` -gt 0 ]; then #check for V-APP file
  echo "-----> Mounting V-APP..."
  if [ ! -d "$HOME/V-APPS" ]; then    #Create V-APPS directory
    mkdir -p "$HOME/V-APPS";
  fi
  
  if [ ! -f "$HOME/V-APPS/nginx.conf" ]; then #Create nginx.conf if necessary
    touch "$HOME/V-APPS/nginx.conf"
  fi

  v_app_config=($(tar -xO V-APP -f $TMP_ARCHIVE))
  V_APP_NAME=${v_app_config[0]}
  V_APP_MOUNT_POINT=${v_app_config[1]}
  
  WILDCARD_SSL="$HOME/ssl"
  SSL="$HOME/V-APPS/ssl"

  if [[ -f "$HOME/VHOST" ]]; then
    VHOST=$(< "$HOME/VHOST")
    SUBDOMAIN=${V_APP_NAME/%\.${VHOST}/}
    if [[ "$V_APP_NAME" == *.* ]] && [[ "$SUBDOMAIN" == "$V_APP_NAME" ]]; then
      hostname="${V_APP_NAME/\//-}"
    else
      hostname="${V_APP_NAME/\//-}.$VHOST"
    fi

    if [[ -f "$SSL/server.crt" ]] && [[ -f "$SSL/server.key" ]]; then
      SSL_INUSE="$SSL"
    elif  [[ -f "$WILDCARD_SSL/server.crt" ]] && [[ -f "$WILDCARD_SSL/server.key" ]] && [[ $hostname = `openssl x509 -in $WILDCARD_SSL/server.crt -noout -subject | tr '/' '\n' | grep CN= | cut -c4-` ]]; then
      SSL_INUSE="$WILDCARD_SSL"
    fi

    # ssl based nginx.conf
    if [[ -n "$SSL_INUSE" ]]; then

    cat<<EOF >> $HOME/V-APPS/nginx.conf
server {
  listen      80;
  server_name $hostname;
  return 301 https://\$host\$request_uri;
}

server {
  listen      443;
  server_name $hostname;

  ssl on;
  ssl_certificate     $SSL_INUSE/server.crt;
  ssl_certificate_key $SSL_INUSE/server.key;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!CAMELLIA;
  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  ssl_prefer_server_ciphers on;

  location    $V_APP_MOUNT_POINT {
    proxy_pass  http://127.0.0.1:$PORT;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
EOF
    if [ -d "$HOME/$APP" ]; then
      echo "http://$hostname" > "$HOME/$APP/URL"
    fi
  else
  # default nginx.conf
    cat<<EOF >> $HOME/V-APPS/nginx.conf
server {
  listen      80;
  server_name $hostname;
  location    $V_APP_MOUNT_POINT {
    proxy_pass  http://127.0.0.1:$PORT;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
EOF
    if [ -d "$HOME/$APP" ]; then
      echo "http://$hostname" > "$HOME/$APP/URL"
    fi
    fi
    #pluginhook nginx-pre-reload $APP
    sudo /etc/init.d/nginx reload
  fi
  if [ -f "$HOME/$APP/nginx.conf"]; then
    mv "$HOME/$APP/nginx.conf" "$HOME/$APP/nginx.conf.disabled"
  fi
else
  rm $TMP_ARCHIVE
fi